#!/usr/bin/env bash
set -euo pipefail

LOGFILE="/var/log/server_setup.log"
DRY_RUN=false
TEST_MODE=false

case "${1:-}" in
  --dry-run) DRY_RUN=true; echo "üîç DRY-RUN —Ä–µ–∂–∏–º: –∏–∑–º–µ–Ω–µ–Ω–∏—è –ù–ï –±—É–¥—É—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω—ã" ;;
  --test) TEST_MODE=true; echo "üß™ –¢–ï–°–¢–û–í–´–ô —Ä–µ–∂–∏–º: —Å–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ rollback" ;;
esac

log() { echo "[$1] $2" | tee -a "$LOGFILE"; }
run() { $DRY_RUN && log "INFO" "DRY-RUN: $*" || eval "$@"; }

restart_ssh() {
  systemctl reload ssh 2>/dev/null || systemctl restart ssh 2>/dev/null || \
  systemctl reload sshd 2>/dev/null || systemctl restart sshd 2>/dev/null || \
  systemctl restart ssh.socket 2>/dev/null || log ERROR "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å SSH"
}

step_update_system() {
  log INFO "[1] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
  run "export DEBIAN_FRONTEND=noninteractive"
  run "apt-get update -y && apt-get upgrade -y && apt-get dist-upgrade -y"
}

step_firewall() {
  log INFO "[2] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW..."
  run "ufw allow 22/tcp"
  run "ufw allow 20022/tcp"
  run "ufw allow 8443/tcp"
  run "ufw allow 1985/tcp"
  run "ufw --force enable"
  if $TEST_MODE || ! ufw status | grep -q '20022'; then
    log ERROR "‚ùå UFW –Ω–µ –ø—Ä–∏–º–µ–Ω–∏–ª –ø—Ä–∞–≤–∏–ª–æ ‚Äî –æ—Ç–∫–∞—Ç..."
    run "ufw delete allow 20022/tcp || true"
  else
    log INFO "‚úÖ UFW –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü–æ—Ä—Ç 20022 –æ—Ç–∫—Ä—ã—Ç."
  fi
}

step_configure_ssh() {
  log INFO "[3] –°–º–µ–Ω–∞ –ø–æ—Ä—Ç–∞ SSH..."

  read -p "‚ùì –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–º–µ–Ω–µ –ø–æ—Ä—Ç–∞ SSH –Ω–∞ 20022? [y/N]: " confirm
  [[ "$confirm" =~ ^[Yy]$ ]] || { log INFO "–ü—Ä–æ–ø—É—â–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."; return; }

  local cfg="/etc/ssh/sshd_config"
  local port=20022

  if ss -tln | grep -q ":$port"; then
    log ERROR "–ü–æ—Ä—Ç $port —É–∂–µ –∑–∞–Ω—è—Ç –¥—Ä—É–≥–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º. –û—Ç–∫–∞—Ç –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω."
    return
  fi

  if [ ! -f /etc/ssh/ssh_host_rsa_key ]; then
    log WARN "SSH-–∫–ª—é—á–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º..."
    run "ssh-keygen -A"
  fi

  if ! sshd -t; then
    log ERROR "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è SSH —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏. –û—Ç–∫–∞—Ç –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω."
    return
  fi

  grep -q "Port ${port}" "$cfg" || run "echo 'Port ${port}' >> $cfg"
  grep -q "Port 22" "$cfg" || run "echo 'Port 22' >> $cfg"
  run "sshd -T | grep port"

  restart_ssh
  sleep 2

  if $TEST_MODE || ! ss -tln | grep -q ":${port}" || ! nc -z localhost ${port}; then
    log ERROR "‚ùå –ü–æ—Ä—Ç ${port} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ‚Äî –æ—Ç–∫–∞—Ç..."
    run "sed -i '/Port ${port}/d' $cfg"
    run "ufw delete allow ${port}/tcp || true"
    restart_ssh
    log WARN "–û—Ç–∫–∞—Ç SSH –≤—ã–ø–æ–ª–Ω–µ–Ω. –û—Å—Ç–∞–ª—Å—è –ø–æ—Ä—Ç 22."
  else
    log INFO "‚úÖ SSH —Å–ª—É—à–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç–∞—Ö 22 –∏ ${port}."
  fi
}

step_disable_ping() {
  log INFO "[4] –ó–∞–ø—Ä–µ—Ç ICMP..."
  grep -q "icmp_echo_ignore_all" /etc/sysctl.conf || run "echo 'net.ipv4.icmp_echo_ignore_all=1' >> /etc/sysctl.conf"
  run "sysctl -w net.ipv4.icmp_echo_ignore_all=1"
  if $TEST_MODE || [[ "$(sysctl -n net.ipv4.icmp_echo_ignore_all)" != "1" ]]; then
    log ERROR "‚ùå ICMP –Ω–µ –æ—Ç–∫–ª—é—á—ë–Ω ‚Äî –æ—Ç–∫–∞—Ç..."
    run "sysctl -w net.ipv4.icmp_echo_ignore_all=0"
  else
    log INFO "‚úÖ ICMP –æ—Ç–∫–ª—é—á—ë–Ω."
  fi
}

step_fail2ban() {
  log INFO "[5] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Fail2ban..."
  run "apt-get install -y fail2ban"
  run "systemctl enable --now fail2ban"
  if $TEST_MODE || ! systemctl is-active --quiet fail2ban; then
    log ERROR "‚ùå Fail2ban –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω ‚Äî –æ—Ç–∫–∞—Ç..."
    run "systemctl stop fail2ban"
    run "apt-get remove -y fail2ban"
  else
    log INFO "‚úÖ Fail2ban —Ä–∞–±–æ—Ç–∞–µ—Ç."
  fi
}

step_sqlite() {
  log INFO "[6] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ sqlite3..."
  run "apt-get install -y sqlite3"
  if $TEST_MODE || ! command -v sqlite3 >/dev/null; then
    log ERROR "‚ùå sqlite3 –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –æ—Ç–∫–∞—Ç..."
    run "apt-get remove -y sqlite3"
  else
    log INFO "‚úÖ sqlite3 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
  fi
}

step_ntp() {
  log INFO "[7] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ chrony..."
  run "apt-get install -y chrony"
  run "systemctl enable --now chrony"
  if $TEST_MODE || ! chronyc tracking | grep -q 'Leap status'; then
    log ERROR "‚ùå NTP –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω ‚Äî –æ—Ç–∫–∞—Ç..."
    run "systemctl stop chrony"
    run "apt-get remove -y chrony"
  else
    log INFO "‚úÖ NTP —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω."
  fi
}

step_ssl() {
  log INFO "[8] –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL..."
  local dir="/etc/ssl/selfsigned"
  run "mkdir -p $dir"
  run "openssl req -x509 -nodes -days 3650 -newkey rsa:2048 \
    -keyout $dir/server.key -out $dir/server.crt \
    -subj '/C=RU/ST=MSK/L=Moscow/O=MyOrg/OU=IT/CN=$(hostname)'"
  if $TEST_MODE || ! openssl x509 -checkend 86400 -in "$dir/server.crt" >/dev/null; then
    log ERROR "‚ùå –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω ‚Äî –æ—Ç–∫–∞—Ç..."
    run "rm -f $dir/server.crt $dir/server.key"
  else
    log INFO "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω."
    run "openssl x509 -in $dir/server.crt -noout -enddate"
  fi
}

step_3xui() {
  log INFO "[9] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ 3X-UI..."
  run "bash <(curl -Ls https://raw.githubusercontent.com/MHSanaei/3x-ui/master/install.sh)"
  if $TEST_MODE || [ ! -d "/usr/local/x-ui" ]; then
    log ERROR "‚ùå 3X-UI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ‚Äî –æ—Ç–∫–∞—Ç..."
    run "rm -rf /usr/local/x-ui"
  else
    log INFO "‚úÖ 3X-UI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞."
  fi
}

main() {
  log INFO "=== –ù–∞—á–∞–ª–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: $(date) ==="
  step_update_system
  step_firewall
  step_configure_ssh
  step_disable_ping
  step_fail2ban
  step_sqlite
  step_ntp
  step_ssl
  step_3xui
  log INFO "=== –ó–∞–≤–µ—Ä—à–µ–Ω–æ: $(date) ==="
}

main
