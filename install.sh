#!/usr/bin/env bash
set -euo pipefail

LOGFILE="/var/log/server_setup.log"
DRY_RUN=false

# === –ê—Ä–≥—É–º–µ–Ω—Ç—ã ===
if [[ "${1:-}" == "--dry-run" ]]; then
  DRY_RUN=true
  echo "üîç DRY-RUN —Ä–µ–∂–∏–º: –∏–∑–º–µ–Ω–µ–Ω–∏—è –ù–ï –±—É–¥—É—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
fi

# === –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ===
log() {
  local level="$1"; shift
  echo "[$level] $*" | tee -a "$LOGFILE"
}

run() {
  if $DRY_RUN; then
    log "INFO" "DRY-RUN: $*"
  else
    eval "$@"
  fi
}

# === –ú–æ–¥—É–ª—å 1: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã ===
update_system() {
  log "INFO" "[1] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
  run "export DEBIAN_FRONTEND=noninteractive"
  run "apt-get update -y"
  run "apt-get upgrade -y"
  run "apt-get dist-upgrade -y"
}

# === –ú–æ–¥—É–ª—å 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH-–ø–æ—Ä—Ç–∞ —Å rollback ===
configure_ssh_port() {
  local sshd_config="/etc/ssh/sshd_config"
  local rollback_needed=false

  log "INFO" "[2] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –Ω–∞ –ø–æ—Ä—Ç—ã 22 –∏ 20022..."
  run "ufw allow 22/tcp"
  run "ufw allow 20022/tcp"

  grep -q 'Port 20022' "$sshd_config" || run "echo 'Port 20022' >> $sshd_config"
  grep -q 'Port 22' "$sshd_config" || run "echo 'Port 22' >> $sshd_config"

  restart_ssh

  sleep 2
  if ! ss -tln | grep -q ':20022'; then
    log "ERROR" "–ü–æ—Ä—Ç 20022 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è ‚Äî –æ—Ç–∫–∞—Ç..."
    run "sed -i '/Port 20022/d' $sshd_config"
    run "ufw delete allow 20022/tcp"
    restart_ssh
    rollback_needed=true
  fi

  if ! nc -z localhost 20022; then
    log "ERROR" "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ø–æ—Ä—Ç—É 20022 ‚Äî –æ—Ç–∫–∞—Ç..."
    run "sed -i '/Port 20022/d' $sshd_config"
    run "ufw delete allow 20022/tcp"
    restart_ssh
    rollback_needed=true
  fi

  if $rollback_needed; then
    log "WARN" "–û—Ç–∫–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω. SSH –æ—Å—Ç–∞–ª—Å—è –Ω–∞ –ø–æ—Ä—Ç—É 22."
  else
    log "INFO" "‚úÖ SSH —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—ã 22 –∏ 20022."
  fi
}

restart_ssh() {
  if systemctl list-unit-files | grep -q '^ssh\.service'; then
    run "systemctl reload ssh || systemctl restart ssh"
  elif systemctl list-unit-files | grep -q '^sshd\.service'; then
    run "systemctl reload sshd || systemctl restart sshd"
  elif systemctl list-unit-files | grep -q '^ssh\.socket'; then
    run "systemctl restart ssh.socket"
  else
    log "ERROR" "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ SSH —é–Ω–∏—Ç –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞."
  fi
}

# === –ú–æ–¥—É–ª—å 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW ===
configure_firewall() {
  log "INFO" "[3] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW..."
  run "ufw allow 8443/tcp"
  run "ufw allow 1985/tcp"
  run "ufw --force enable"
}

# === –ú–æ–¥—É–ª—å 4: –ó–∞–ø—Ä–µ—Ç ICMP (ping) ===
disable_ping() {
  log "INFO" "[4] –ó–∞–ø—Ä–µ—Ç ICMP (ping)..."
  grep -q "net.ipv4.icmp_echo_ignore_all" /etc/sysctl.conf || run "echo 'net.ipv4.icmp_echo_ignore_all=1' >> /etc/sysctl.conf"
  run "sysctl -w net.ipv4.icmp_echo_ignore_all=1"
}

# === –ú–æ–¥—É–ª—å 5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Fail2ban ===
install_fail2ban() {
  log "INFO" "[5] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Fail2ban..."
  run "apt-get install -y fail2ban"
  run "systemctl enable --now fail2ban"
}

# === –ú–æ–¥—É–ª—å 6: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ sqlite3 ===
install_sqlite() {
  log "INFO" "[6] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ sqlite3..."
  run "apt-get install -y sqlite3"
}

# === –ú–æ–¥—É–ª—å 7: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫ chrony ===
setup_ntp() {
  log "INFO" "[7] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ chrony..."
  run "apt-get install -y chrony"
  run "systemctl enable --now chrony"
}

# === –ú–æ–¥—É–ª—å 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ NTP ===
verify_ntp() {
  log "INFO" "[8] –ü—Ä–æ–≤–µ—Ä–∫–∞ NTP..."
  run "chronyc tracking || true"
}

# === –ú–æ–¥—É–ª—å 9: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ ===
generate_ssl_cert() {
  local dir="/etc/ssl/selfsigned"
  local crt="$dir/server.crt"
  local key="$dir/server.key"

  log "INFO" "[9] –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
  run "mkdir -p $dir"

  if [ ! -f "$crt" ]; then
    run "openssl req -x509 -nodes -days 3650 -newkey rsa:2048 \
      -keyout $key -out $crt \
      -subj '/C=RU/ST=MSK/L=Moscow/O=MyOrg/OU=IT/CN=$(hostname)'"
    log "INFO" "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω."
  else
    log "INFO" "üîÑ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º."
  fi

  local end_date
  end_date=$(openssl x509 -in "$crt" -noout -enddate | cut -d= -f2)
  log "INFO" "–ü—É—Ç–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤:"
  log "INFO" "  –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: $crt"
  log "INFO" "  –ö–ª—é—á:       $key"
  log "INFO" "  –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ: $end_date"
}

# === –ú–æ–¥—É–ª—å 10: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–Ω–µ–ª–∏ 3X-UI ===
install_3xui() {
  log "INFO" "[10] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–Ω–µ–ª–∏ 3X-UI..."
  if [ ! -d "/usr/local/x-ui" ]; then
    run "bash <(curl -Ls https://raw.githubusercontent.com/MHSanaei/3x-ui/master/install.sh)"
  else
    log "INFO" "üîÑ 3X-UI —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º."
  fi
}

# === –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ===
main() {
  log "INFO" "=== –ù–∞—á–∞–ª–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: $(date) ==="
  update_system
  configure_ssh_port
  configure_firewall
  disable_ping
  install_fail2ban
  install_sqlite
  setup_ntp
  verify_ntp
  generate_ssl_cert
  install_3xui
  log "INFO" "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: $(date) ==="
}

main
